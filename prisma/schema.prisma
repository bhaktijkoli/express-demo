// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String    @db.VarChar(255)
  email     String    @db.VarChar(255)
  password  String    @db.VarChar(255)
  followers Follows[] @relation("follower")
  following Follows[] @relation("following")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Comment   Comment[]
  posts     Post[]
  likes     Like[]    @relation("user")
}

model Follows {
  follower    User   @relation("follower", fields: [followerId], references: [id])
  followerId  String
  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String

  @@id([followerId, followingId])
}

model Post {
  id          String    @id @default(cuid())
  title       String    @db.VarChar(255)
  description String    @db.VarChar(255)
  user        User      @relation(fields: [userId], references: [id])
  comments    Comment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  likes       Like[]    @relation("post")
}

model Comment {
  id        String   @id @default(cuid())
  message   String   @db.VarChar(255)
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  Post      Post?    @relation(fields: [postId], references: [id])
  postId    String?
}

model Like {
  post   Post   @relation("post", fields: [postId], references: [id])
  postId String
  user   User   @relation("user", fields: [userId], references: [id])
  userId String

  @@id([postId, userId])
}
